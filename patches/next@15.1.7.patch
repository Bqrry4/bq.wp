diff --git a/dist/build/swc/options.js b/dist/build/swc/options.js
index e8f9b77d4a5b21e10366af039353a3d266db9814..b4a9346d167da0c578fd50db60072341e22297b4 100644
--- a/dist/build/swc/options.js
+++ b/dist/build/swc/options.js
@@ -57,7 +57,7 @@ function getParserOptions({ filename, jsConfig, ...rest }) {
         ...rest,
         syntax: hasTsSyntax ? 'typescript' : 'ecmascript',
         dynamicImport: true,
-        decorators: enableDecorators,
+        decorators: true,
         // Exclude regular TypeScript files from React transformation to prevent e.g. generic parameters and angle-bracket type assertion from being interpreted as JSX tags.
         [hasTsSyntax ? 'tsx' : 'jsx']: !isTSFile,
         importAssertions: true
@@ -102,6 +102,7 @@ function getBaseSWCOptions({ filename, jest, development, hasReactRefresh, globa
                 } : {},
                 legacyDecorator: enableDecorators,
                 decoratorMetadata: emitDecoratorMetadata,
+		    decoratorVersion: "2022-03",
                 useDefineForClassFields: useDefineForClassFields,
                 react: {
                     importSource: (jsConfig == null ? void 0 : (_jsConfig_compilerOptions4 = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions4.jsxImportSource) ?? ((compilerOptions == null ? void 0 : compilerOptions.emotion) && !isReactServerLayer ? '@emotion/react' : 'react'),
diff --git a/dist/esm/build/swc/options.js b/dist/esm/build/swc/options.js
index 52aa0b5d4861180234a69242fc6597a9bbf47023..193d70abffb9913dc18bbfc4e2d3ccee0556ba36 100644
--- a/dist/esm/build/swc/options.js
+++ b/dist/esm/build/swc/options.js
@@ -26,7 +26,7 @@ export function getParserOptions({ filename, jsConfig, ...rest }) {
         ...rest,
         syntax: hasTsSyntax ? 'typescript' : 'ecmascript',
         dynamicImport: true,
-        decorators: enableDecorators,
+	decorators: true,
         // Exclude regular TypeScript files from React transformation to prevent e.g. generic parameters and angle-bracket type assertion from being interpreted as JSX tags.
         [hasTsSyntax ? 'tsx' : 'jsx']: !isTSFile,
         importAssertions: true
@@ -71,6 +71,7 @@ function getBaseSWCOptions({ filename, jest, development, hasReactRefresh, globa
                 } : {},
                 legacyDecorator: enableDecorators,
                 decoratorMetadata: emitDecoratorMetadata,
+		decoratorVersion: "2022-03",
                 useDefineForClassFields: useDefineForClassFields,
                 react: {
                     importSource: (jsConfig == null ? void 0 : (_jsConfig_compilerOptions4 = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions4.jsxImportSource) ?? ((compilerOptions == null ? void 0 : compilerOptions.emotion) && !isReactServerLayer ? '@emotion/react' : 'react'),
